services:
  db:
    image: postgres:15-alpine
    container_name: sonarqube-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
      TZ: America/Manaus
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5431:5432"   # <- expÃµe no host a porta 5431
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonarqube -d sonarqube"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - sonarnet

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    sysctls:
      vm.max_map_count: 262144
      fs.file-max: 131072
    ulimits:
      nofile:
        soft: 131072
        hard: 131072
      nproc: 8192
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: sonarqube
      TZ: America/Manaus
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9000/api/system/health | grep -q 'GREEN'"]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - sonarnet

networks:
  sonarnet:

volumes:
  postgres_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
